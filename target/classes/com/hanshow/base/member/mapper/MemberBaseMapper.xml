<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanshow.base.member.mapper.MemberBaseMapper">
  <resultMap id="BaseResultMap" type="com.hanshow.base.member.dto.MemberBase">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="union_id" jdbcType="CHAR" property="unionId" />
    <result column="open_id" jdbcType="CHAR" property="openId" />
    <result column="nick_name" jdbcType="CHAR" property="nickName" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="account_status" jdbcType="INTEGER" property="accountStatus" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, union_id, open_id, nick_name, phone, register_time, account_status, email, merchant_id, 
    password, create_time, update_time, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.hanshow.base.member.dto.MemberBaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_base
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member_base
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hanshow.base.member.dto.MemberBaseExample">
    delete from member_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hanshow.base.member.dto.MemberBase">
    insert into member_base (id, union_id, open_id, nick_name, 
      phone, register_time, account_status, 
      email, merchant_id, password, 
      create_time, update_time, del_flag
      )
    values (#{id,jdbcType=CHAR}, #{unionId,jdbcType=CHAR}, #{openId,jdbcType=CHAR}, #{nickName,jdbcType=CHAR}, 
      #{phone,jdbcType=CHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{accountStatus,jdbcType=INTEGER}, 
      #{email,jdbcType=CHAR}, #{merchantId,jdbcType=INTEGER}, #{password,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hanshow.base.member.dto.MemberBase">
    insert into member_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=CHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hanshow.base.member.dto.MemberBaseExample" resultType="java.lang.Long">
    select count(*) from member_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_base
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.unionId != null">
        union_id = #{record.unionId,jdbcType=CHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=CHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=CHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_base
    set id = #{record.id,jdbcType=CHAR},
      union_id = #{record.unionId,jdbcType=CHAR},
      open_id = #{record.openId,jdbcType=CHAR},
      nick_name = #{record.nickName,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=CHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      account_status = #{record.accountStatus,jdbcType=INTEGER},
      email = #{record.email,jdbcType=CHAR},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      password = #{record.password,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanshow.base.member.dto.MemberBase">
    update member_base
    <set>
      <if test="unionId != null">
        union_id = #{unionId,jdbcType=CHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanshow.base.member.dto.MemberBase">
    update member_base
    set union_id = #{unionId,jdbcType=CHAR},
      open_id = #{openId,jdbcType=CHAR},
      nick_name = #{nickName,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      account_status = #{accountStatus,jdbcType=INTEGER},
      email = #{email,jdbcType=CHAR},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      password = #{password,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=CHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.hanshow.base.member.dto.MemberBase">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="union_id" jdbcType="CHAR" property="unionId" />
    <result column="open_id" jdbcType="CHAR" property="openId" />
    <result column="nick_name" jdbcType="CHAR" property="nickName" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="account_status" jdbcType="INTEGER" property="accountStatus" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, union_id, open_id, nick_name, phone, register_time, account_status, email, merchant_id, 
    password, create_time, update_time, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.hanshow.base.member.dto.MemberBaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_base
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member_base
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hanshow.base.member.dto.MemberBaseExample">
    delete from member_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hanshow.base.member.dto.MemberBase">
    insert into member_base (id, union_id, open_id, nick_name, 
      phone, register_time, account_status, 
      email, merchant_id, password, 
      create_time, update_time, del_flag
      )
    values (#{id,jdbcType=CHAR}, #{unionId,jdbcType=CHAR}, #{openId,jdbcType=CHAR}, #{nickName,jdbcType=CHAR}, 
      #{phone,jdbcType=CHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{accountStatus,jdbcType=INTEGER}, 
      #{email,jdbcType=CHAR}, #{merchantId,jdbcType=INTEGER}, #{password,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hanshow.base.member.dto.MemberBase">
    insert into member_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=CHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hanshow.base.member.dto.MemberBaseExample" resultType="java.lang.Long">
    select count(*) from member_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_base
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.unionId != null">
        union_id = #{record.unionId,jdbcType=CHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=CHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=CHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_base
    set id = #{record.id,jdbcType=CHAR},
      union_id = #{record.unionId,jdbcType=CHAR},
      open_id = #{record.openId,jdbcType=CHAR},
      nick_name = #{record.nickName,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=CHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      account_status = #{record.accountStatus,jdbcType=INTEGER},
      email = #{record.email,jdbcType=CHAR},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      password = #{record.password,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanshow.base.member.dto.MemberBase">
    update member_base
    <set>
      <if test="unionId != null">
        union_id = #{unionId,jdbcType=CHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanshow.base.member.dto.MemberBase">
    update member_base
    set union_id = #{unionId,jdbcType=CHAR},
      open_id = #{openId,jdbcType=CHAR},
      nick_name = #{nickName,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      account_status = #{accountStatus,jdbcType=INTEGER},
      email = #{email,jdbcType=CHAR},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      password = #{password,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>